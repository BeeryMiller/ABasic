{\rtf1\ansi \deff0{\fonttbl{\f8\fswiss Arial;}}\margl720\margr2160\pgnstart40\sectd\pgnrestart\pgnstarts40\footery1080{\header \pard\plain\ql MYARC ADVANCED BASIC\par }{\footer \pard\plain\ql \chpgn     VERSION 4.0  DDI SOFTWARE  \par }\pard \plain\f8\fs20 DATA\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab DATA\par \par \par \par \par Format\par DATA data-list\par \par Cross Reference\par READ, RESTORE\par \par Description\par The DATA statement enables you to store constants within your program. You can assign the constants to variables by using a READ statement.\par \par \tab The data-list consists of one or more constants separated by commas. The constants can be \tab assigned to the variables specified in the variable-list of a READ statement.\par \tab The assignment is made when the READ statement is executed.\par \par If a numeric variable is specified in the variable-list of a READ statement, a numeric constant must be in the corresponding position in the data-list of the DATA statement. If a string variable is specified in a READ statement, either a string or a numeric constant may be in the corresponding position in the DATA statement. A string constant in a data-list may optionally be enclosed in quotation marks. However, if the string constant contains a comma, a quotation mark, or leading or trailing spaces, it must be enclosed in quotation marks.\par \par A quotation mark within a string constant is represented by two adjacent quotation marks. A null string is represented in a data-list by two adjacent commas, or two commas separated by two adjacent quotation marks.\par \par The order in which the data values appear within the data-list and the order of the DATA statements within a program normally determine the order in which the values are read. Values from each data-list are read sequentially, beginning with the first item in the first DATA statement. If your program includes more than one DATA statement, the DATA statements are read in ascending line-number order (unless you use a RESTORE statement to specify otherwise).\par \par A DATA statement encountered during program execution is ignored.\par \par A DATA statement cannot be part of a multiple-statement line, nor can it include a trailing remark.\par }

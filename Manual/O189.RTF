{\rtf1\ansi \deff0{\fonttbl{\f8\fswiss Arial;}}\margl1440\margr1440\pgnstart189\sectd\pgnrestart\pgnstarts189\footery1080{\header \pard\plain\qr MYARC ADVANCED BASIC\par }{\footer \pard\plain\qr     VERSION 4.0  DDI SOFTWARE  \chpgn \par }\pard\qj \plain\f8\fs20 SAY --Subprogram\tab \tab \tab \tab \tab \tab \tab \tab \tab \tab SAY\par \par \par \par \par Format\par CALL SAY(word-string[,direct-string][,...])\par \par Cross Reference\par SPGET\par \par Description\par The SAY subprogram enables you to instruct the computer to produce speech.\par \par \tab Word-string is a string-expression whose value is any of the words or phrases in the computer's \par \tab resident vocabulary. If you use a string constant, you must enclose it in quotation marks. \par \tab Alphabetic characters must be upper-case.\par \par \tab The computer substitutes "UHOH" for a word-string not in the vocabulary.\par \par \tab A speech phrase (more than one word) must be enclosed in pound signs(#). A speech phrase \par \tab must be predefined; that is it must be resident in the computer's vocabulary.\par \par \tab A compound is a new word formed by combining two words already in the vocabulary. For \par \tab example, SOME+THING produces "something" and THERE+FOUR produces "therefore".\par \tab  A compound must not be enclosed in pound signs.\par \par \tab See Appendix H for a list of the computer's resident vocabulary .\par \par \tab Direct-string is a string-expression whose value is the computer's internal representation of \par \tab a word or phrase. You can use or modify a direct-string returned by the SPGET subprogram.\par \par See Appendix I for information on adding suffixes to direct-strings. You can specify multiple word-strings and direct-strings by alternating them. To specify two consecutive word-strings or direct-strings, enter an extra comma as a separator between them.\par \par Examples\par 100 CALL SAY("HELLO, HOW ARE YOU")\par Causes the computer to say "Hello, how are you".\par \par CALL SAY(A$,,B$)\par Causes the computer to say the words indicated by A$ and b$, which must have been returned by SPGET.\par \par The following program illustrates a use of CALL SAY with a word-string and three direct-strings.\par \par 100 CALL SPGET("HOW",X$)\par 110 CALL SPGET("ARE",Y$)\par 120 CALL SPGET("YOU",Z$)\par 130 CALL SAY("HELLO",X$,,Y$,,Z$)\par }

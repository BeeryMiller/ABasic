{\rtf1\ansi \deff0{\fonttbl{\f8\fswiss Arial;}}\margl1440\margr1440\pgnstart257\sectd\pgnrestart\pgnstarts257\footery1080{\header \pard\plain\qr MYARC ADVANCED BASIC\par }{\footer \pard\plain\qr     VERSION 4.0  DDI SOFTWARE  \chpgn \par }\pard\qj \plain\f8\fs20 ABASIC ASSEMBLY SUPPORT AND OTHER INFORMATION--CON'T\par \par ABASIC Memory block >F000->FFFF\par \par >F000->F01F\tab \tab User and ABASIC WS Register\par >F020->F03F\tab \tab ABASIC WS Register\par >F040->F047\tab \tab Fast move byte routine\par >F048->F04F\tab \tab Fast move word routine\par >F050->F061\tab \tab Fast move to/from stack routine\par >F062->F07D\tab \tab Fast move memory table page 3 to active page 3\par >F080->F0FF\tab \tab ABASIC WS Registers (Many Abasic routines use these registers i.e.XOP)\par >F100->F107\tab \tab Port read/write (0,1,2,3)\par >F108->F10F\tab \tab Port read/write (0,1,2,3)\par >F110->F117\tab \tab Page Map(active pages)\par >F120->F12F\tab \tab Sound\par >F130->F13F\tab \tab Clock\par >F140->FE2F\tab \tab Abasic support data(i.e. i/o pab, buffers, program storage info)\par \tab \tab \tab Corruption of this memory block will cause lockup.\par >FE30->FF2F\tab \tab Reserved for ABASIC\par >FF30->FFDF\tab \tab Unused block of memory(Debug may use part of this)\par >FFE0->FFFF\tab \tab Used by MDOS and DEBUG\par \par Call Peek can be used to get the values from >0000->FFFF memory addresses. Information at these memory addresses are values based on the visible memory(active pages).\par Call Load can be used to put values in >2000->DFFF memory addresses, but memory addresses >2000->24F3 contain the Abasic Assembly support routines and other Abasic routines. (See Utilities info table)\par \par The following are the syntax for STCR and LDCR:\par \par CALL STCR(address,length,input value)\par CALL LDCR(address,length,output value)\par \par The following are four new assembly instructions available to the TMS9995:\par DIVS  (DIVide Signed)      MPYS  (MultiPlY Signed)\par \par [<label>] DIVS <gas> [<comment>]\par [<label>] MPYS <gas> [<comment>]\par A destination-operand is not used, because it must always be R0 and R1 of the user workspace.\par \par Examples\par DIVS R2\tab DIVS *R4+\tab DIVS @ADDR\tab \tab DIVS @VALUE(R10)\par MPYS R3\tab MPYS *R7+\tab MPYS @LABEL\tab MPYS @INDEX(R8)\par \par opcodes:\tab DIVS     =   >0180     Format VI\par \tab \tab MPYS   =   >01C0     Format VI\par \par LWP (Load Workspace-Pointer from a register)\par LST (Load STatus-register)\par \par [<label>] LWP <wa> [<comment>]\par [<label>] LST <wa> [<comment>]\par \par opcodes:\tab LWP     =   >0090     Format VIII\par \tab \tab LST      =   >0080     Format VIII\par Examples\tab LWP R5\tab LWP R12\tab LST R13\tab LST R0\par }
